학습내용

1. 사용 table
	- dept01
	
2. 구현 로직
	1. 모든 검색
		- 모든 정보를 하나의 객체에 담아서 최종 view에게 출력 위임
		- ArrayList<Dept01DTO>
		- Dept01DTO : 하나의 부서 정보를 보유하게 되는 데이터 표현용 클래스
	2. 부서 번호로 특정 부서의 모든 정보 검색
		- 경우의 수 
			1. 정상 실행
				존재하는 부서 번호 검색
					- 반환값 : Dept01DTO 객체
				미존재하는 부서 번호로 검색(에러 아님, 데이터가 없을 뿐)
					- 반환값 : 
			2. 비정상 실행
				에외 발생 : 처리 가능한 경미한 에러, try~catch
				에러 : 심각한 에러
		- public ? getDept01One (int deptno) {
			select * from dept01 where dept = ?
			경우의 수 1 -
				데이터가 존재할 경우 - Dept10DTO 객체 반환
				미존재할 경우 - null
			경우의 수 2 -
				Optional 반환
		  }
		  
	3. 새로운 부서 등록
		경우의 수
			1. pk가 중복 고려
				중복되었다 - 상황 client에게 언급
				중복 아니다 - 정상 저장
			2. 예외발생
			..
		구현 코드 예시
			- 웹브라우저 입력되는 데이터가 네트워크 타고 서버에 전송
		public boolean insertDept01(Dept01DTO, newDept) {} (최근 이거 사용)
		public ? insertDept01(ine deptnom String dame, String loc) {}
		
		- Springboot에선 브라우저에서 전송되는 데이터의 별칭과 DTO 멤버변수명 동일한 경우 DTO 자동생성
		
		
	4. 존재하는 부서 삭제
	
	5. 부서 정보 수정
	...

3. 개발 설계
	1. 클래스 구조
		dept01 DTO
			   DAO
			   
4. 개발 환경 참고
	1. oracle
		win < vb < ubuntu < docker container < ubuntu 14 < oracle
							oracle jdbc통신 포트 1521
				   ubuntu에서 접속시 포트포워딩 -p 1521:1521
			 127.0.0.1:1521 <-> 10.0.2.15:1521
	2. 소스 개발 구조
		maven 기반의 driver 셋팅
		gradle 기반의 driver 셋팅
		
		
		
		
		
		
		
		
		
		